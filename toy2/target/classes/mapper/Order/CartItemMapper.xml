<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fastcampus.toy2.dao.CartItemMapper">
    <sql id="selectFromCart">
        SELECT cart_id, cart_seq, style_num, p_size,
               count, ord_st, state
        FROM cart_item
    </sql>


    <!-- 장바구니에 담긴 전체 상품 체크  -->
    <select id="count" resultType="int">
        SELECT count(*)
        FROM cart_item
    </select>

<!--  CRUD  -->
<!--    1. 고객이 상품을 장바구니에 담는 경우     -->
    <insert id="insert" parameterType="Map">
        INSERT INTO cart_item(cart_id, cart_seq, style_num, p_size, count, create_id, update_id)
        VALUES #{cart_id}, #{cart_seq}, #{style_num}, #{p_size}, #{count}, #{mbr_id}, #{mbr_id}
    </insert>

<!--  2. 고객이 상품 주문을 완료하는 경우. 즉, 주문테이블, 주문_상품 테이블에 insert가 성공하는 경우(1)  -->
<!--    2.1. update로 주문상태 변환
        2.2. 주문상태가 N으로 바뀐 row의 장바구니번호, 장바구니상품일련번호를 List로 반환
        2.3. 해당하는 장바구니번호, 장바구니상품일련번호의 장바구니 상품 상태의 주문 완료상태를 Y 로 변경
        2.4. 동일한 장바구니 번호에서 주문 완료 상태가 N인게 있는지 count로 확인
        2.5. 개수가 1이 넘어가면 해당하는 장바구니의 장바구니상품, 일련번호를 제외하고 List로 가져옴
        2.6. 장바구니번호를 새롭게 생성
        2.7. 새로 생성된 장바구니 번호에 List로 가지고 있는 상품 다시 담기
  -->
    <update id="update" parameterType="Map">
        UPDATE cart_item
        SET ord_st = 'N'
        WHERE crt_id = #{cart_id},
               crt_seq = #{crt_seq}
    </update>



<!--  비회원 -> 주문번호가 ID가 되니까 비회원ID컬럼이 따로 필요없는 것같음.  -->
</mapper>